<?php
/**
 * @file
 * Code for the Personnages feature.
 */

include_once 'personnages.features.inc';

/**
 * Implements hook_permission().
 */
function personnages_permission() {
  return array(
    'view all playable characters' => array(
      'title' => t('View all playable character sheets without being restricted.'),
    ),
    'view all non-playable characters' => array(
      'title' => t('View all non-playable character sheets without being restricted.'),
    ),
  );
}

/**
 * Implements hook_node_access().
 */
function personnages_node_access($node, $op, $account) {
  global $user;
  $return = NODE_ACCESS_IGNORE;

  if ($op == 'view' && $node->type == 'character') {
    $return = NODE_ACCESS_DENY;
    $type = reset(field_get_items('node', $node, 'field_character_type'));
    if ($type['value'] == 'Joueur') {
      $incarnate = reset(field_get_items('node', $node, 'field_incarnate'));
      if (user_access('view all playable characters') || $user->uid == $incarnate['target_id']) {
        $return = NODE_ACCESS_ALLOW;
      }
    }
    elseif ($type['value'] == 'PNJ' && user_access('view all non-playable characters')) {
      $return = NODE_ACCESS_ALLOW;
    }
  }

  return $return;
}

// -----------------------------------------------------------------------------
// EXTRA FIELDS

/**
 * Implements hook_field_extra_fields().
 */
function personnages_field_extra_fields() {
  $extras = array();

  $extras['node']['character']['display']['view_events'] = array(
    'label' => t('Views events'),
    'weight' => 99,
  );
  $extras['node']['character']['display']['view_infos'] = array(
    'label' => t('Views infos'),
    'weight' => 99,
  );
  $extras['node']['character']['display']['view_sequences'] = array(
    'label' => t('Views sequences'),
    'weight' => 99,
  );
  $extras['node']['character']['display']['view_groupes_zorga'] = array(
    'label' => t('Views groupes Zorga'),
    'weight' => 99,
  );
  $extras['node']['character']['display']['view_groupes_player'] = array(
    'label' => t('Views groupes Player'),
    'weight' => 99,
  );

  return $extras;
}

/**
 * Implements hook_node_view().
 */
function personnages_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'character') {
    $view_content = views_embed_view('admin_evenements', 'block_by_character', $node->nid);
    $node->content['view_events'] = _config_base_extra_field_view('view_events', 'Evènements liés au personnage', $node, $view_mode, $langcode, $view_content, user_access('view all playable characters'));

    $view_content = views_embed_view('admin_informations', 'block_by_character', $node->nid);
    $node->content['view_infos'] = _config_base_extra_field_view('view_infos', 'Informations liées au personnage', $node, $view_mode, $langcode, $view_content, user_access('view all playable characters'));

    $view_content = views_embed_view('admin_sequences', 'block_by_character', $node->nid);
    $node->content['view_sequences'] = _config_base_extra_field_view('view_sequences', 'Séquences liées au personnage', $node, $view_mode, $langcode, $view_content, user_access('view all playable characters'));

    $view_content = views_embed_view('admin_groupes', 'block_by_character', $node->nid);
    $node->content['view_groupes_zorga'] = _config_base_extra_field_view('view_groupes', 'Groupes liés au personnage', $node, $view_mode, $langcode, $view_content, user_access('view all playable characters'));

    $view_content = views_embed_view('admin_groupes', 'block_by_character_player', $node->nid);
    $node->content['view_groupes_player'] = _config_base_extra_field_view('view_groupes', 'Mes Groupes', $node, $view_mode, $langcode, $view_content);
  }
}

