<?php
/**
 * @file
 * Code for the Avantages feature.
 */

include_once 'avantages.features.inc';

/**
 * Implements hook_permission().
 */
function avantages_permission() {
  return array(
    'view all avantages' => array(
      'title' => t('View all avantages without being restricted.'),
    ),
  );
}

/**
 * Implements hook_node_access().
 */
function avantages_node_access($node, $op, $account) {
  $return = NODE_ACCESS_IGNORE;

  if ($op == 'view' && $node->type == 'avantage') {
    $return = NODE_ACCESS_DENY;
    if (user_access('view all avantages')) {
      $return = NODE_ACCESS_ALLOW;
    }
  }

  return $return;
}

/**
 * Implements hook_file_download().
 */
function avantages_file_download($uri) {
  global $user;

  if (strpos($uri, 'private://avantages/') === 0 && !user_access('view all avantages')) {
    // Get the corresponding fid.
    $files = file_load_multiple(array(), array('uri' => $uri));
    $fid = key($files);
    if (empty($fid)) { return NULL; }

    // Get the corresponding avantage id.
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'avantage')
      ->fieldCondition('field_attachment', 'fid', $fid, '=')
      ->addMetaData('account', user_load(1));
    $result = $query->execute();
    if (empty($result) || empty($result['node'])) { return NULL; }
    $avtid = key($result['node']);

    // Get the field collections in which this avantage is.
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'field_collection_item')
      ->entityCondition('bundle', 'field_avantages')
      ->fieldCondition('field_avantage_valide', 'value', 1, '=')
      ->fieldCondition('field_avantage', 'target_id', $avtid, '=');
    $result = $query->execute();
    if (empty($result) || empty($result['field_collection_item'])) { return -1; }
    $fcids = array_keys($result['field_collection_item']);

    // Get the characters linked to one of these avantages and incarnated by the current user.
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'character')
      ->fieldCondition('field_incarnate', 'target_id', $user->uid, '=')
      ->fieldCondition('field_avantages', 'value', $fcids, 'IN');
    $result = $query->execute();
    if (empty($result) || empty($result['node'])) { return -1; }

    // Allow download.
    $result = array(
      'Content-Type' => file_get_mimetype($uri),
      'Content-Disposition' => 'attachement; filename="' . basename($uri) . '"',
      'Content-Length' => filesize($uri),
      'Cache-Control' => 'must-revalidate, post-check=0, pre-check=0',
      'Pragma' => 'no-cache',
    );
    return $result;
  }

  return NULL;
}

/**
 * Implements hook_file_download_access().
 */
function avantages_file_download_access($file_item, $entity_type, $entity) {
  if ($entity_type == 'node' && $entity->type = 'avantage') {
    // Get the field collections in which this avantage is.
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'field_collection_item')
      ->entityCondition('bundle', 'field_avantages')
      ->fieldCondition('field_avantage_valide', 'value', 1, '=')
      ->fieldCondition('field_avantage', 'target_id', $entity->nid, '=');
    $result = $query->execute();
    if (empty($result) || empty($result['field_collection_item'])) { return FALSE; }
    $fcids = array_keys($result['field_collection_item']);

    // Get the characters linked to one of these avantages and incarnated by the current user.
    global $user;
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'character')
      ->fieldCondition('field_incarnate', 'target_id', $user->uid, '=')
      ->fieldCondition('field_avantages', 'value', $fcids, 'IN');
    $result = $query->execute();
    if (empty($result) || empty($result['node'])) { return FALSE; }

    return TRUE;
  }
}
