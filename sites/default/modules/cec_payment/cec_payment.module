<?php
/**
 * @file
 * Handle Paypal payment
 */

define('CEC_PAYMENT_DEBUG', TRUE);

define('CEC_PAYMENT_ROLE_BEFORE', 'Inscription validée');
define('CEC_PAYMENT_ROLE_PAID', 'Inscription finalisée');
define('CEC_PAYMENT_ROLE_JOUEUR', 'Joueur');
if (CEC_PAYMENT_DEBUG) {
  define('CEC_PAYMENT_PAYPAL_EMAIL', 'seller_1339334871_biz@duael.fr');
  define('CEC_PAYMENT_PAYPAL_NOTIFY', 'http://preprod.gn-capes-et-crocs.fr');
}
else {
  define('CEC_PAYMENT_PAYPAL_EMAIL', 'tresorier@terraludis.org');
  define('CEC_PAYMENT_PAYPAL_NOTIFY', 'http://www.gn-capes-et-crocs.fr');
}



//------------------------------------------------------------------------------
// HOOKS

/**
 * Implements hook_permission().
 */
function cec_payment_permission() {
  return array(
    'access payment' => array(
      'title' => t('Access Payment page'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function cec_payment_menu() {
  $menu = array();
  
  $menu['paypal/callback'] = array(
    'page callback' => '_cec_payment_paypal_callback',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );
  $menu['reglement'] = array(
    'title' => 'Mon règlement',
    'page callback' => '_cec_payment_reglement',
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('access payment'),
  );
  $menu['reglement/recu'] = array(
    'title' => 'Règlement reçu',
    'page callback' => '_cec_payment_reglement_recu',
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
  );
  
  return $menu;
}

/**
 * Implements hook_form().
 */
function cec_payment_form() {
  global $user;
  $isJoueur = array_search(CEC_PAYMENT_ROLE_JOUEUR, $user->roles) !== FALSE;
  
  $form = array();
  $form['#tree'] = TRUE;
  $form['#action'] = simple_paypal_get_url();
  
  // Paypal parameters
  $form['business'] = array(
    '#type' => 'hidden',
    '#value' => CEC_PAYMENT_PAYPAL_EMAIL,
  );
  $form['cmd'] = array(
    '#type' => 'hidden',
    '#value' => '_xclick',
  );
  $form['no_shipping'] = array(
    '#type' => 'hidden',
    '#value' => 1,
  );
  $form['return'] = array(
    '#type' => 'hidden',
    '#value' => CEC_PAYMENT_PAYPAL_NOTIFY . '/reglement/recu',
  );
  $form['notify_url'] = array(
    '#type' => 'hidden',
    '#value' => url('paypal/callback', array('absolute' => TRUE, 'base_url' => CEC_PAYMENT_PAYPAL_NOTIFY)),
  );
  $form['amount'] = array(
    '#type' => 'hidden',
	'#value' => ($isJoueur ? '114.13' : '83.07'),
  );
  $form['currency_code'] = array(
    '#type' => 'hidden',
    '#value' => 'EUR',
  );
  $form['item_name'] = array(
	'#type' => 'hidden',
	'#value' => 'Inscription ' . ($isJoueur ? 'Joueur' : 'PNJ/Orga') . ' au GN Capes & Crocs',
  );
  $form['custom'] = array(
    '#type' => 'hidden',
    '#value' => $user->uid,
  );
  
  // Block amount
  $form['block_amount'] = array(
    '#type' => 'container',
  );
  $form['block_amount']['title'] = array(
    '#markup' => '<h2>Montant</h2>',
  );
  $form['block_amount']['content'] = array(
    '#markup' => '<p>Votre participation aux frais :</p>',
  );
  $form['block_amount']['detail'] = array(
    '#markup' => '<ul>'
               . '<li' . ($isJoueur ? ' class="highlight"' : ''). '><span>Joueurs : 110€</span></li>'
               . '<li' . (!$isJoueur ? ' class="highlight"' : ''). '><span>Orgas et PNJ : 80€</span></li>'
               . '</ul>',
  );
  
  // Block payment method
  $form['block_payment_method'] = array(
    '#type' => 'container',
  );
  $form['block_payment_method']['title'] = array(
    '#markup' => '<h2>Méthode de règlement</h2>',
  );
  $form['block_payment_method']['payment_method'] = array(
    '#type' => 'radios',
    '#options' => array(
      'paypal' => 'Paypal',
      'check_1x' => 'Chèque en une fois',
  	  'check_3x' => 'Chèque en trois fois',
    ),
    '#default_value' => 'paypal',
  );
  
  // Block Paypal
  $form['block_paypal'] = array(
    '#type' => 'container',
    '#states' => array(
      'visible' => array(
        ':input[name="block_payment_method[payment_method]"]' => array('value' => 'paypal'),
      ), 
    ),
  );
  $form['block_paypal']['title'] = array(
    '#markup' => '<h2>Paiement par Paypal</h2>',
  );
  $form['block_paypal']['content_intro'] = array(
    '#markup' => '<p>Si vous payez par Paypal en utilisant le lien ci-dessous, un peu plus de 3% de frais seront ajoutés a votre règlement. Désolés, c\'est pas nous, c\'est Paypal. De même, si vous payez dans une autre monnaie que l\'euro, des frais de change pourraient s\'ajouter a votre facture.</p>',
  );
  $form['block_paypal']['content_amount'] = array(
    '#markup' => '<ul>'
               . '<li' . ($isJoueur ? ' class="highlight"' : ''). '><span>Joueurs : 114,13€</span></li>'
               . '<li' . (!$isJoueur ? ' class="highlight"' : ''). '><span>Orgas et PNJ : 83,07€</span></li>'
               . '</ul>',
  );
  $form['block_paypal']['content_comment'] = array(
    '#markup' => '<p>Formule utilisée : (x + 0.25) / 0.966</p>',
  );
  $form['block_paypal']['submit'] = array(
    '#type' => 'submit', 
    '#value' => 'Régler via Paypal',
    '#name' => 'submit',
  );
  
  // Block Chèque 1X
  $form['block_check_1x'] = array(
    '#type' => 'container',
    '#states' => array(
      'visible' => array(
        ':input[name="block_payment_method[payment_method]"]' => array('value' => 'check_1x'),
      ), 
    ),
  );
  $form['block_check_1x']['title'] = array(
    '#markup' => '<h2>Paiement par chèque en une fois</h2>',
  );
  $form['block_check_1x']['content_common'] = array(
    '#markup' => '<p>Votre chèque doit nous parvenir dans les 15 jours suivant votre inscription en ligne. Sans nouvelle de votre part, vous serez désinscrit afin de laisser la place à d\'autres personnes.</p>',
  );
  $form['block_check_1x']['content_info'] = array(
    '#markup' => '<p>Pour un paiement en une seule fois merci de nous envoyer un chèque qui sera encaissé au début du mois de septembre 2012.</p>',
  );
  $form['block_check_1x']['content_details'] = array(
    '#markup' => '<p class="highlight">'
               . '<strong>Montant :</strong> <span>' . ($isJoueur ? '110' : '80'). '€</span><br />'
               . '<strong>Ordre :</strong> Terra Ludis<br />'
               . '<strong>Adresse :</strong><br />GN Capes&Crocs<br />c/o Edith Verceil<br />208 rue Claude Brousson<br />Apt. 2012, Bât. 7, Rés. Le Fontmagne<br />34000 MONTPELLIER FRANCE'
               . '</p>',
  );
  
  // Block Chèque 3X
  $form['block_check_3x'] = array(
    '#type' => 'container',
    '#states' => array(
      'visible' => array(
        ':input[name="block_payment_method[payment_method]"]' => array('value' => 'check_3x'),
      ), 
    ),
  );
  $form['block_check_3x']['title'] = array(
    '#markup' => '<h2>Paiement par chèque en trois fois</h2>',
  );
  $form['block_check_3x']['content_common'] = array(
    '#markup' => '<p>Vos chèques doivent nous parvenir dans les 15 jours suivant votre inscription en ligne. Sans nouvelle de votre part, vous serez désinscrit afin de laisser la place à d\'autres personnes.</p>',
  );
  $form['block_check_3x']['content_info'] = array(
    '#markup' => '<p>Pour un paiement en trois fois merci de nous envoyer trois chèques qui seront respectivement encaissés début septembre, début novembre 2012 et début février 2013.</p>',
  );
  $form['block_check_3x']['content_details'] = array(
    '#markup' => '<p class="highlight">'
               . '<strong>Montants :</strong> <span>' . ($isJoueur ? '50€, 30€ et 30€' : '28€, 26€ et 26€'). '</span><br />'
               . '<strong>Ordre :</strong> Terra Ludis<br />'
               . '<strong>Adresse :</strong><br />GN Capes&Crocs<br />c/o Edith Verceil<br />208 rue Claude Brousson<br />Apt. 2012, Bât. 7, Rés. Le Fontmagne<br />34000 MONTPELLIER FRANCE'
               . '</p>',
  );
  
  
  // Block remind
  $form['block_remind'] = array(
    '#type' => 'container',
  );
  $form['block_remind']['title'] = array(
    '#markup' => '<h2>Rappel</h2>',
  );
  $form['block_remind']['content'] = array(
    '#markup' => '<p>Pour participer au GN, vous devez être membre de Terra Ludis à la date du GN. Paiement direct impossible pour l\'instant (pour information le renouvellement d\'adhésion 2012 était de 10 euros)</p>',
  );

  return $form;
}

/**
 * Implements hook_mail().
 */
function cec_payment_mail($key, &$message, $params) {
  if ($key == 'payment_received_paypal') {
    $message['subject'] = '[GN C&C] Paiement reçu';
    $message['body'] = array('Votre règlement a bien été reçu via Paypal. Merci.');
  } elseif ($key == 'payment_received_check') {
    $message['subject'] = '[GN C&C] Paiement reçu';
    $message['body'] = array('Votre règlement a bien été reçu par Chèque. Merci.');
  }
}

/**
 * Implementation of hook_action_info().
 */
function cec_payment_action_info() {
  return array(
    'cec_payment_bulk_declare_paid' => array(
      'label' => t('Enregistrer le paiement'),
      'type' => 'entity',
      'aggregate' => TRUE,
      'configurable' => FALSE,
      'hooks' => array(),
    ),
  );
}


//------------------------------------------------------------------------------
// CALLBACKS

/**
 * Implementation of a Drupal action.
 * Passes selected ids as arguments to a view.
 */
function cec_payment_bulk_declare_paid($entities, $context = array()) {
  foreach ($entities as $user) {
    $isPaid = array_search(CEC_PAYMENT_ROLE_PAID, $user->roles) !== FALSE;
    if (!$isPaid) {
      _cec_payment_set_paid($user, 'check');
    }
  }
}

/**
 * 
 */
function _cec_payment_reglement() {
  global $user;
  $isPaid = array_search(CEC_PAYMENT_ROLE_PAID, $user->roles) !== FALSE;
  if ($isPaid) {
    drupal_goto('reglement/recu');
  } else {
    return drupal_get_form('cec_payment_form');
  }
}

/**
 * 
 */
function _cec_payment_reglement_recu() {
  return '<p class="highlight center"><span>Votre règlement a bien été reçu.<br />Merci.</span></p>'
       . '<h2>Désistement</h2>'
       . '<p>Si vous êtes finalement dans l\'impossibilité de venir, voici les conditions dans lesquelles nous recevrons votre désistement.</p>'
       . '<h3>La meilleure solution</h3>'
       . '<p>Vous trouvez un(e) remplaçant(e) qui reprends votre rôle et vous vous arrangez avec cette personne pour la participation aux frais.</p>'
       . '<h3>Remboursement</h3>'
       . '<p>Sauf cas de force majeure :</p>'
       . '<ul>'
       . '<li>avant le 01 février 2013 remboursement à 100% ;</li>'
       . '<li>entre le 01 février et le 01 mars 2013 remboursement de 50% de la PAF ;</li>'
       . '<li>et à partir du 01/03/2013 plus de remboursement du tout.</li>'
       . '</ul>';
}

/**
 * 
 */
function _cec_payment_paypal_callback() {
  if (empty($_POST)) { return; }
  
  // curl verification failed
  if (!simple_paypal_ipn_verify($_POST)) {
	watchdog('cec_payment', 'cURL verification failed', array(), WATCHDOG_ERROR);
    return;
  }

  $receiver = $_POST['business'];
  if ($receiver == '') {
    $receiver = $_POST['receiver_email'];
  }
  
  // Payment is not for the email address configured
  if ($receiver != CEC_PAYMENT_PAYPAL_EMAIL) {
    watchdog('cec_payment', 'Payment is not for the email address configured', array(), WATCHDOG_ERROR);
	return;
  }

  // Format the fields
  $data = array(
    'name'        => check_plain($_POST['first_name'] .' '. $_POST['last_name'] . ($_POST['payer_business_name'] ? ' ('. $_POST['payer_business_name'] .')' : '')),
    'amount'      => check_plain((float)$_POST['mc_gross'] - (float)$_POST['mc_fee']),
    'fee'         => check_plain($_POST['mc_fee']),
    'timestamp'   => check_plain(strtotime($_POST['payment_date'])),
    'payer_email' => check_plain($_POST['payer_email']),
    'uid'         => check_plain($_POST['custom']),
  );

  $user = user_load($data['uid']);
  if (!$user) {
    watchdog('cec_payment', 'Unknown user @uid', array('@uid' => $data['uid']), WATCHDOG_ERROR);
	return;
  }
  
  _cec_payment_set_paid($user, 'paypal');
  
  watchdog('cec_payment', 'Paiement reçu de @name (@mail) [@uid] : @amount €.', array(
    '@name'     => $data['name'],
    '@mail'     => $data['payer_email'],
    '@amount'   => $data['amount'],
    '@uid'      => $data['uid'],
  ));
}

function _cec_payment_set_paid($user, $src = 'paypal') {
  // Change roles
  $role = user_role_load_by_name(CEC_PAYMENT_ROLE_BEFORE);
  unset($user->roles[$role->rid]);
  $role = user_role_load_by_name(CEC_PAYMENT_ROLE_PAID);
  $user->roles[$role->rid] = $role->name;
  user_save($user);
  
  // Send confirmation email
  drupal_mail('cec_payment', 'payment_received_' . $src, $user->mail, language_default());
}